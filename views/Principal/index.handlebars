<div class="container-fluid">


    <div class="row">
        {{#if aClansTotal}}
            <div class="col-lg-3 col-sm-6">
                <div class="card gradient-4">
                    <div class="card-body">
                        <h3 class="card-title text-white">Total de Clan's</h3>
                        <div class="d-inline-block">
                            <h2 class="text-white" id="nTotalClan">{{aClansTotal}}</h2>
                            <p class="text-white mb-0"></p>
                        </div>
                        <span class="float-right display-5 opacity-5"><i class="fa fa-heart"></i></span>
                    </div>
                </div>
            </div>
        {{/if}}
        <div class="col-lg-3 col-sm-6">
            <div class="card gradient-3">
                <div class="card-body">
                    <h3 class="card-title text-white">Total de Personagens</h3>
                    <div class="d-inline-block">
                        <h2 class="text-white" id="nTotalPers">0</h2>
                        <p class="text-white mb-0"></p>
                    </div>
                    <span class="float-right display-5 opacity-5"><i class="fa fa-users"></i></span>
                </div>
            </div>
        </div>

        <!--
        <div class="col-lg-3 col-sm-6">
            <div class="card gradient-1">
                <div class="card-body">
                    <h3 class="card-title text-white">Products Sold</h3>
                    <div class="d-inline-block">
                        <h2 class="text-white">4565</h2>
                        <p class="text-white mb-0">Jan - March 2019</p>
                    </div>
                    <span class="float-right display-5 opacity-5"><i class="fa fa-shopping-cart"></i></span>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-sm-6">
            <div class="card gradient-2">
                <div class="card-body">
                    <h3 class="card-title text-white">Net Profit</h3>
                    <div class="d-inline-block">
                        <h2 class="text-white">$ 8541</h2>
                        <p class="text-white mb-0">Jan - March 2019</p>
                    </div>
                    <span class="float-right display-5 opacity-5"><i class="fa fa-money"></i></span>
                </div>
            </div>
        </div>
       
        -->
    </div>



    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Rank Geral</h4>
            <p class="text-muted"><code>Verifique aqui o rank dos personagens</code>
            </p>
            <div id="dTabela" class="container accordion">
                <div id="dTabela"></div>
            </div>
        </div>
        <pre></pre>
    </div>
    
    <pre></pre>

    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Dados Clan's</h4>
        </div>
    
        <div id="dTabela2" class="container accordion">
            <div id="dTabela2"></div>
        </div>
        <pre></pre>

        <div id="dTabela3" class="container accordion">
            <div id="dTabela3"></div>
        </div>
    
        <pre></pre>
    </div>



</div>


<script>
    var aClans   = []
    var aClasses = []

    {{#each aClans}}
        var aItens = []

        aItens.push('{{this}}')
        aItens.push(0)
        aItens.push(0)
        aItens.push(0)

        aClans.push(aItens)
    {{/each}}

    {{#each aClasses}}
        var aItens = []

        aItens.push('{{this}}')
        aItens.push(0)

        aClasses.push(aItens)
    {{/each}}

    google.charts.setOnLoadCallback(CarregaTabela); 
    
    function CarregaTabela() {
        aDados  = new google.visualization.DataTable();
        aDados2 = new google.visualization.DataTable();
        aDados3 = new google.visualization.DataTable();
        
        aDados.addColumn('number', 'Rank');          //00
        aDados.addColumn('number', 'Nick');          //01
        aDados.addColumn('number', "Classe");        //02
        aDados.addColumn('number', "Nível");         //03     
        aDados.addColumn('number', "Poder");         //04
        aDados.addColumn('number', "Itens");         //04
        aDados.addColumn('number', "TIER IV")        //05
        aDados.addColumn('number', "TIER III")       //06
        aDados.addColumn('number', "TIER II")        //07
        aDados.addColumn('number', "TIER I")         //08
        aDados.addColumn('number', "Clan");          //09

        aDados2.addColumn('string', 'Clan');         //00
        aDados2.addColumn('number', 'Membros');      //01
        aDados2.addColumn('number', "Poder");        //02
        aDados2.addColumn('number', "Nível Médio");  //03     

        aDados3.addColumn('string', 'Classe');       //00
        aDados3.addColumn('number', 'Quantidade');   //01 

        var cssClassNames = {
            'headerRow': 'large-font bold-font a center-text fundo-table-background-padrao '
            ,'tableRow': 'false'
            ,'oddTableRow': ''
            //,'selectedTableRow': 'orange-background large-font'
            ,'hoverTableRow': 'false'
            ,'headerCell': ''
            ,'tableCell': 'large-font'
            ,'rowNumberCell': 'underline-blue-font'
        }

        options  = {
            showRowNumber: true
            //,width: '100%'
            //,height: '100%'
            ,allowHtml: true
            ,'cssClassNames': cssClassNames
        }

        options2  = {
            showRowNumber: false
            //,width: '100%'
            //,height: '100%'
            ,allowHtml: true
            ,'cssClassNames': cssClassNames
        }

        cDados = new google.visualization.Table(document.getElementById('dTabela'));
        cDados2 = new google.visualization.Table(document.getElementById('dTabela2'));
        cDados3 = new google.visualization.Table(document.getElementById('dTabela3'));
        cDados.draw(aDados, options); 
        cDados2.draw(aDados2, options2); 
        cDados3.draw(aDados3, options2); 
    }


    function CarregaDados() {
        // Carrega DIV de carregamento
        $('#preloader').fadeIn(500);

        BuscaDados('Rank', [
            1
        ])
        
        //Carrega API
        request.done(dados => {            
            if(aDados.getNumberOfRows() > 0)
                aDados.removeRows(0, aDados.getNumberOfRows())
        })

        //Processa Dados
        request.then(dados => {  

            nTotalPers.innerText = dados.length

            aDados.addRows(dados.length+1)

            for(i=0; i < dados.length; i++) {                                   
                aDados.setCell(i,  0, dados[i]._RANK    , dados[i]._RANK.toString()   , { style:' font-weight:bold; text-align:center' } )
                aDados.setCell(i,  1, dados[i].id       , dados[i].NICK               , { style:' font-weight:bold; text-align:center' } )
                aDados.setCell(i,  2, dados[i].ID_CLASSE, dados[i].CLASSE             , { style:' font-weight:bold; text-align:center' } )
                aDados.setCell(i,  3, dados[i].NIVEL    , dados[i].NIVEL.toString()   , { style:' font-weight:bold; text-align:center' } )
                aDados.setCell(i,  4, dados[i].PODER    , dados[i].PODER.toString()   , { style:' font-weight:bold; text-align:center' } )
                aDados.setCell(i,  5, dados[i].ITEM     , dados[i].ITEM.toString()    , { style:' font-weight:bold; text-align:center' } )
                aDados.setCell(i,  6, dados[i].TIERIV   , dados[i].TIERIV.toString()  , { style:' font-weight:bold; text-align:center' } )
                aDados.setCell(i,  7, dados[i].TIERIII  , dados[i].TIERIII.toString() , { style:' font-weight:bold; text-align:center' } )
                aDados.setCell(i,  8, dados[i].TIERII   , dados[i].TIERII.toString()  , { style:' font-weight:bold; text-align:center' } )
                aDados.setCell(i,  9, dados[i].TIERI    , dados[i].TIERI.toString()   , { style:' font-weight:bold; text-align:center' } )
                aDados.setCell(i, 10, dados[i].ID_CLAN  , dados[i].CLAN               , { style:' font-weight:bold; text-align:center' } )

                for(b=0; b < aClans.length; b++) {    
                    if(aClans[b][0] == dados[i].CLAN){
                        aClans[b][1] += 1 
                        aClans[b][2] += dados[i].PODER
                        aClans[b][3] += dados[i].NIVEL
                    }
                }
                
                for(b=0; b < aClasses.length; b++) {    
                    if(aClasses[b][0] == dados[i].CLASSE){
                        aClasses[b][1] += 1 
                    }
                }
            }
           // aDados.sort({column: 0, desc: true}, {column: 3, desc: true}, {column: 4, desc: true}, {column: 5, desc: true});
            cDados.draw(aDados, options); 
            
            $('#dTabela .google-visualization-table-table').DataTable({
                "paging":   false
                ,"info":    false
                ,"destroy": true
                //,"searching": false
                ,"language": {
                    "lengthMenu": "Visualizações de _MENU_ registros por página",
                    "zeroRecords": "Nada encontrado",
                    "info": " Página _PAGE_ de _PAGES_",
                    "infoEmpty": "Nenhum registro disponível",
                    "infoFiltered": "(filtrado de _MAX_ registros no total)"
                }
            });

            //Clans
            if(aDados2.getNumberOfRows() > 0)
                aDados2.removeRows(0, aDados2.getNumberOfRows())

            aDados2.addRows(aClans.length)

            for(b=0; b < aClans.length; b++) {
                if(aClans[b][1] / 0)    
                    aClans[b][3] = Math.round(aClans[b][3] / aClans[b][1])

                aDados2.setCell(b,  0, ''          , aClans[b][0]          , { style:' font-weight:bold; text-align:left' } )
                aDados2.setCell(b,  1, aClans[b][1], aClans[b][1].toString(), { style:' font-weight:bold; text-align:center' } )
                aDados2.setCell(b,  2, aClans[b][2], aClans[b][2].toString(), { style:' font-weight:bold; text-align:center' } )
                aDados2.setCell(b,  3, aClans[b][3], aClans[b][3].toString(), { style:' font-weight:bold; text-align:center' } )            
            }
            
            aDados2.sort({column: 0, desc: true});
            cDados2.draw(aDados2, options2); 
            
            //Classes
            if(aDados3.getNumberOfRows() > 0)
                aDados3.removeRows(0, aDados3.getNumberOfRows())

            aDados3.addRows(aClasses.length)

            for(b=0; b < aClasses.length; b++) {
                aDados3.setCell(b,  0, ''            , aClasses[b][0]           , { style:' font-weight:bold; text-align:left' } )
                aDados3.setCell(b,  1, aClasses[b][1], aClasses[b][1].toString(), { style:' font-weight:bold; text-align:center' } )
            }
            
            aDados3.sort({column: 0, desc: true});
            cDados3.draw(aDados3, options2); 


            $('#preloader').fadeOut(500);
        })

        
    }

    setTimeout(function() {
        CarregaDados()
    }, 1000)

</script>

