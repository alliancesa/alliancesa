<div class="container-fluid">

    {{#if aLogin}}
        <div class="alert alert-warning"><strong>Bem Vindo(a)</strong> {{aLogin}}</div>
    {{/if}}

    <div class="card-body">
        <div class="row">  
            <div class="card border shadow empresa-fundo" style="width: 40%; height: 400px;">
                <pre></pre>
                <div class="card-menu border-left-danger">Faturamento - MIL R$</div>
                <div class="card-body">
                    <div id="dTabela1"></div>
                </div>
            </div>
            <pre> </pre>

            <div class="card border shadow empresa-fundo" style="width: 40%; height: 400px;">
                <pre></pre>
                <div class="card-menu border-left-danger">Faturamento Por Produto - MIL R$</div>
                <div class="card-body">
                    <div id="dTabela2"></div>
                </div>
            </div>

            <pre> </pre>
    
            <div class="card border shadow empresa-fundo" style="width: 18%">
                <pre></pre>
                <div class="card-menu border-left-danger">Faturamento</div>
                <div class="card-body">
                    <label><strong>Total Dia</strong></label>
                    <input type="text" class="form-control form-control-sm" id="nTotalFat" value="R$ 0,00" size="10" disabled>
                    <pre></pre>
                    <label><strong>Total Mês</strong></label>
                    <input type="text" class="form-control form-control-sm" id="nTotalFatMes" value="R$ 0,00" size="10" disabled>
                    <pre></pre>
                    <label><strong>Peso Mês</strong></label>
                    <input type="text" class="form-control form-control-sm" id="nPeso" value="0,00" size="10" disabled>
                    <pre></pre>
                    <label><strong>Preço Médio Mês</strong></label>
                    <input type="text" class="form-control form-control-sm" id="nPreco" value="R$ 0,00" size="10" disabled>
                    <pre></pre>
                    <label><strong>Prazo Médio Mês</strong></label>
                    <input type="text" class="form-control form-control-sm" id="nPrazo" value="0" size="10" disabled>
                </div>

                <button type="button" class="btn btn-outline-dark" onclick="CarregaDados()">Atualizar</button>
            </div>
        </div>
<pre></pre>
        <div class="row">
            <div class="card border shadow empresa-fundo" style="width: 49%; height: 100%">
                <pre></pre>
                <div class="card-menu border-left-danger">Faturamento - Preço x Faturamento</div>
                <div class="card-body">
                    <canvas id="dTabela4"></canvas>
                </div>
            </div>
            <pre> </pre>
            <div class="card border shadow empresa-fundo" style="width: 49%; height: 100%">
                <pre></pre>
                <div class="card-menu border-left-danger">MP Comprada - Preço x Volume Ton</div>
                <div class="card-body">
                    <canvas id="dTabela9"></canvas>
                </div>
            </div>
        </div>
        <pre></pre>
        <div class="row">  
            <div class="card border shadow empresa-fundo" style="width: 49%; height: 100%">
                <pre></pre>
                <div class="card-menu border-left-danger">PP Comprado - Preço x Volume Ton</div>
                <div class="card-body">
                    <canvas id="dTabela5" ></canvas>
                </div>
            </div>
            <pre> </pre>
            <div class="card border shadow empresa-fundo" style="width: 49%; height: 100%">
                <pre></pre>
                <div class="card-menu border-left-danger">PE Comprado - Preço x Volume Ton</div>
                <div class="card-body">
                    <canvas id="dTabela7"></canvas>
                </div>
            </div>
        </div>
        <pre></pre>
        <div class="row">
            <div class="card border shadow empresa-fundo" style="width: 100%; height: 100%">
                <pre></pre>
                <div class="card-menu border-left-danger">Consumo x Compra Matéria Prima Ton</div>
                <div class="card-body">
                    <canvas id="dTabela10" style="width: 100%; height: 350px"></canvas>
                </div>
            </div>
        </div>
<pre></pre>

            <div class="row" id="recvspag">
                <pre>   </pre>
                <div class="card border shadow empresa-fundo">
                    <pre></pre>
                    <div class="card-menu border-left-danger">Recebido Vs Pago</div>
                    <div class="card-body">
                        <div id="dTabela6"></div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">  
            <pre>   </pre>
            <div class="row">
                <pre>   </pre>
                <div class="card border shadow empresa-fundo">
                    <pre></pre>
                    <div class="card-menu border-left-danger">Relatórios - Comercial</div>
                    <div class="card-body">
                        <a class="btn btn-sm btn-outline-secondary" href="/ERP/Comercial/Relatorios/ReprePreco">Tabela de Preços</a>
                        </br>
                    </div>
                    <pre></pre>
                    <div class="card-menu border-left-danger">Painéis - Comercial</div>
                    <div class="card-body">
                        <a class="btn btn-sm btn-outline-secondary" href="/PAINEIS/Comercial/ClientesTop20">Maiores Clientes</a>
                        </br>
                        <a class="btn btn-sm btn-outline-secondary" href="/PAINEIS/Comercial/FatFamSubFam">Fat. Familias e SubFamilias</a>
                        </br>
                        <a class="btn btn-sm btn-outline-secondary" href="/PAINEIS/Comercial/FatUNI">Faturamento por Unidade</a>
                        </br>
                        <a class="btn btn-sm btn-outline-secondary" href="/PAINEIS/Comercial/FatPRCUNI">Faturamento por Preço/UNI</a>
                        </br>
                        <a class="btn btn-sm btn-outline-secondary" href="/PAINEIS/Comercial/FatKG">Faturamento em Toneladas</a>
                        </br>
                        <a class="btn btn-sm btn-outline-secondary" href="/PAINEIS/Comercial/FatPRCKG">Faturamento por Preço/KG</a>
                    </div>
                </div>
            </div>   
            <pre>   </pre>

            <div class="row">
                <pre>   </pre>
                <div class="card border shadow empresa-fundo">
                    <pre></pre>
                    <div class="card-menu border-left-warning">ERP - Faturamento</div>
                    <div class="card-body">
                        <a class="btn btn-sm btn-outline-dark" href="/ERP/Comercial/Relatorios/ComFatRegioes">Relatório Fat. por Regiões</a>
                        </br>
                        <a class="btn btn-sm btn-outline-dark" href="/ERP/Estoque/Relatorios/HistIndProd">Histórico Indicadores Produção</a>
                        </br>
                        <a class="btn btn-sm btn-outline-dark" href="/ERP/Faturamento/Relatorios/FatResiduo">Relatório Vendas Residuos</a>
                    </div>
                </div>
            </div>  
            <pre>   </pre>
            <div class="row">
                <pre>   </pre>
                <div class="card border shadow empresa-fundo">
                    <pre></pre>
                    <div class="card-menu border-left-danger">Painéis - Produção</div>
                    <div class="card-body">
                        <a class="btn btn-sm btn-outline-secondary" href="/PAINEIS/Producao/ProdUNI">Produção por Unidade</a>
                        </br>
                        <a class="btn btn-sm btn-outline-secondary" href="/PAINEIS/Producao/ProdPRCUNI">Produção por Preço/UNI</a>
                        </br>
                        <a class="btn btn-sm btn-outline-secondary" href="/PAINEIS/Producao/ProdKG">Produção em Toneladas</a>
                        </br>
                        <a class="btn btn-sm btn-outline-secondary" href="/PAINEIS/Producao/ProdPRCKG">Produção por Preço/KG</a>
                    </div>
                </div>
            </div>   
            <pre>   </pre> 
            <div class="row">
                <pre>   </pre>
                <div class="card border shadow empresa-fundo">
                    <pre></pre>
                    <div class="card-menu border-left-danger">ERP - Produção</div>
                    <div class="card-body">
                        <a class="btn btn-sm btn-outline-dark" href="/ERP/Estoque/Relatorios/GastosProd">Gastos Gerais de Fabricação</a>
                        </br>
                        <a class="btn btn-sm btn-outline-dark" href="/ERP/Estoque/Relatorios/ProdDiaSetor">Produção Diária por Setor</a>
                        </br>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="row">  
            <div class="row">
                <pre>   </pre>
                <div class="card border shadow empresa-fundo">
                    <pre></pre>
                    <div class="card-menu border-left-danger">Painéis - Fabrica</div>
                    <div class="card-body">
                        <a class="btn btn-sm btn-outline-secondary" href="/PAINEIS/ADM_Fabrica/Supervisores">Gestão Supervisores</a>
                        </br>
                        <a class="btn btn-sm btn-outline-secondary" href="/PAINEIS/ADM_Fabrica/CustoMOD">Custo MOD</a>
                        </br>
                    </div>
                </div>
            </div>
        </div>
    </div>  

<script>

    jQuery("#recvspag").fadeOut("fast");

    var options1 
    var options2 
    var options3
    var options4
    var options5
    var options6
    var options7
    var options8
    var options9
    var options10

    var cDados1
    var cDados2
    var cDados4
    var cDados5
    var cDados6
    var cDados7
    var cDados8
    var cDados8
    var cDados9
    var cDados10

    var aDados1
    var aDados2
    var aDados4
    var aDados5
    var aDados6
    var aDados7
    var aDados8
    var aDados9
    var aDados10
    
    var aCores = []

    for (var i = 0; i < 20; i++) {
        aCores.push(GeraCor())
    }

    google.charts.setOnLoadCallback(CarregaTabela); 

    function CarregaTabela() {
        aDados1  = new google.visualization.DataTable();
        aDados2  = new google.visualization.DataTable();
        aDados6  = new google.visualization.DataTable();
        aDados8  = new google.visualization.DataTable();
       
        // FATURAMETO MES ATUAL - ACUMULADO
        aDados1.addColumn('string', 'Descricao');                       //00
        aDados1.addColumn('number', 'Quantidade');                      //01
        aDados1.addColumn({ type: 'string', role: 'style' });           //02
        aDados1.addColumn({ type: 'string', role: 'annotation' });      //03
        aDados1.addColumn({ type: 'string', role: 'annotation' });      //04
 
        options1 = {
            title: ""
            ,width: "100%"
            ,height: 320
            ,bar: { groupWidth: "70%" }
            ,legend: { position: 'none' }
            ,hAxis: {
                title: '',
                textStyle: {
                    color: '#01579b',
                    fontSize: 11,
                    fontName: 'Arial',
                    bold: true,
                    italic: false
                },
                titleTextStyle: {
                    color: '#01579b',
                    fontSize: 11,
                    fontName: 'Arial',
                    bold: false,
                    italic: true
                }
            }
            ,vAxis: {
                title: '',
                textStyle: {
                    color: '#1a237e',
                    fontSize: 9,
                    bold: true
                },
                titleTextStyle: {
                    color: '#1a237e',
                    fontSize: 11,
                    bold: true
                },
                'minValue': 0

            }
            ,annotations: {
                alwaysOutside: true,
                textStyle: {
                    fontSize: 11,
                    bold: true,
                    italic: false,
                    color: '#871b47',
                    auraColor: '#00',
                    opacity: 0.8
                }
            }
        };
        
        aDados1.addRows(6)

        cDados1 = new google.visualization.ColumnChart(document.getElementById("dTabela1"));
        cDados1.draw(aDados1, options1);


        ///        
        aDados2.addColumn('string', 'Descrição');          //00
        aDados2.addColumn('number', "Percentual");         //01   

        options2 = {};

        cDados2 = new google.visualization.PieChart(document.getElementById('dTabela2'));
        cDados2.draw(aDados2, options2);

        // Recebido VS Pago
        aDados6.addColumn('string', 'Descricao');                       //00
        aDados6.addColumn('number', 'Quantidade');                      //01
        aDados6.addColumn({ type: 'string', role: 'style' });           //02
        aDados6.addColumn({ type: 'string', role: 'annotation' });      //03
        aDados6.addColumn({ type: 'string', role: 'annotation' });      //04
 
        options6 = {
            title: '' //"* Meta R$ 6.000.000,00"
            ,width: "100%"
            ,height: 320
            ,bar: { groupWidth: "70%" }
            ,legend: { position: 'none' }
            ,hAxis: {
                title: '',
                textStyle: {
                    color: '#01579b',
                    fontSize: 11,
                    fontName: 'Arial',
                    bold: true,
                    italic: false
                },
                titleTextStyle: {
                    color: '#01579b',
                    fontSize: 11,
                    fontName: 'Arial',
                    bold: false,
                    italic: true
                }
            }
            ,vAxis: {
                title: '',
                textStyle: {
                    color: '#1a237e',
                    fontSize: 11,
                    bold: true
                },
                titleTextStyle: {
                    color: '#1a237e',
                    fontSize: 11,
                    bold: true
                },
                'minValue': 0

            }
            ,annotations: {
                alwaysOutside: true,
                textStyle: {
                    fontSize: 11,
                    bold: true,
                    italic: false,
                    color: '#871b47',
                    auraColor: '#00',
                    opacity: 0.8
                }
            }
        };
        
        aDados6.addRows(3)

        cDados6 = new google.visualization.ColumnChart(document.getElementById("dTabela6"));
        cDados6.draw(aDados6, options6);
    
    }

    function CarregaFat() {
        // 01
        BuscaDados('/Gerencial3', [
            1
            ,_cEmpresas.name
        ])
        
        //Carrega API
        request.done(dados => {  
        })
        
        //Processa Dados
        request.then(dados => {  

            aDados1.setCell(0, 0, dados[0].ANO_2.toString())   
            aDados1.setCell(0, 1, dados[0].ANO_TOTAL_2)   
            aDados1.setCell(0, 2, "BROWN")                 
            aDados1.setCell(0, 3, dados[0].ANO_TOTAL_22)

            aDados1.setCell(1, 0, dados[0].ANO_1.toString())   
            aDados1.setCell(1, 1, dados[0].ANO_TOTAL_1)   
            aDados1.setCell(1, 2, "RED")                 
            aDados1.setCell(1, 3, dados[0].ANO_TOTAL_12)

            aDados1.setCell(2, 0, dados[0].ANO_0.toString())   
            aDados1.setCell(2, 1, dados[0].ANO_TOTAL_0)   
            aDados1.setCell(2, 2, "GREEN")                 
            aDados1.setCell(2, 3, dados[0].ANO_TOTAL_02)

            aDados1.setCell(3, 0, dados[0].MES + ' ' + dados[0].ANO_2)   
            aDados1.setCell(3, 1, dados[0].ANOMES_2)   
            aDados1.setCell(3, 2, "BROWN")                 
            aDados1.setCell(3, 3, dados[0].ANOMES_22)

            aDados1.setCell(4, 0, dados[0].MES + ' ' + dados[0].ANO_1)   
            aDados1.setCell(4, 1, dados[0].ANOMES_1)   
            aDados1.setCell(4, 2, "RED")                 
            aDados1.setCell(4, 3, dados[0].ANOMES_12)

            aDados1.setCell(5, 0, dados[0].MES + ' ' + dados[0].ANO_0)   
            aDados1.setCell(5, 1, dados[0].ANOMES_0)   
            aDados1.setCell(5, 2, "GREEN")                 
            aDados1.setCell(5, 3, dados[0].ANOMES_02)

            cDados1.draw(aDados1, options1); 
        })
    }

        
//-----------------------------------------------        
    function CarregaDados() {
        
        //02
        BuscaDados('/Gerencial3', [
            2
            ,cAno4
            ,_cEmpresas.name
        ])
        
        //Carrega API
        request.done(dados => { })
        
        //Processa Dados
        request.then(dados => {  
            aDados2.addRows(dados.length)
            
            for(i=0; i < dados.length; i++) {
                aDados2.setCell(i,  0, dados[i].DESCRICAO)
                aDados2.setCell(i,  1, dados[i].PERCENTUAL, dados[i].VALBRUT2)
            }  

            options2 = {
                title: 'Ano ' + dados[0].ANO // + ' - ' + 'Faturamento Total: R$ ' +  dados[1].TOTALFAT2
                //,is3D: true     
                ,width: "100%"
                ,height: 320     
                ,slices: {  
                    1: {offset: 0.1}
                    ,2: {offset: 0.1}
                    ,3: {offset: 0.1}
                    ,4: {offset: 0.1}
                    ,5: {offset: 0.1}
                    ,6: {offset: 0.1}
                    ,7: {offset: 0.1}
                    ,8: {offset: 0.1}
                }
                ,legend: {
                    position: 'right'
                    ,textStyle: {fontSize: 9}
                }
            };
            
            cDados2.draw(aDados2, options2); 
        })

        //04
        BuscaDados('/Gerencial3', [
            4
            ,cAno4+cMes
            ,_cEmpresas.name
        ])
        
        //Carrega API
        request.done(dados => { })
        
        //Processa Dados
        request.then(dados => {  
                    
            nTotalFatMes.value = 'R$ ' + dados[0].FAT_MES
            nTotalFat.value    = 'R$ ' + dados[0].FAT_DIA
            nPrazo.value       = dados[0].PRAZO
            nPreco.value       = 'R$ ' + dados[0].PRECO + ' Kg'
            nPeso.value        = dados[0].PBRUTO + ' Kg'

        })

        /// testando
        BuscaDados('/Gerencial3', [
            5
            ,_cEmpresas.name
        ])
        
        //Carrega API
        request.done(dados => {
            aDados5.labels = []

            aDados5.datasets[0].data = []
            aDados5.datasets[1].data = []
        })
        
        //Processa Dados
        request.then(dados => {  

            for(i=0; i < dados.length; i++) {
                aDados5.labels.push(dados[i].MES)

                aDados5.datasets[0].data.push(dados[i].PESO)
                aDados5.datasets[1].data.push(dados[i].VALORES)
                
            }

            cDados5.update(); 
        })

// rel novo 8
        BuscaDados('/Gerencial3', [
            8
            ,_cEmpresas.name
        ])
        
        //Carrega API
        request.done(dados => {
            aDados7.labels = []

            aDados7.datasets[0].data = []
            aDados7.datasets[1].data = []
        })
        
        //Processa Dados
        request.then(dados => {  

            for(i=0; i < dados.length; i++) {
                aDados7.labels.push(dados[i].MES)

                aDados7.datasets[0].data.push(dados[i].PESO)
                aDados7.datasets[1].data.push(dados[i].VALORES)
                
            }

            cDados7.update(); 
        })
   
//rel nov 10       
        BuscaDados('/Gerencial3', [
            10
            ,_cEmpresas.name
        ])
        
        //Carrega API
        request.done(dados => {
            aDados9.labels = []

            aDados9.datasets[0].data = []
            aDados9.datasets[1].data = []
        })
        
        //Processa Dados
        request.then(dados => {  

            for(i=0; i < dados.length; i++) {
                aDados9.labels.push(dados[i].MES)

                aDados9.datasets[0].data.push(dados[i].PESO)
                aDados9.datasets[1].data.push(dados[i].VALORES)
            }

            cDados9.update(); 
        })

//rel nov 11
        BuscaDados('/Gerencial3', [
            11
            ,_cEmpresas.name
        ])
        
        //Carrega API
        request.done(dados => {
            aDados4.labels = []

            aDados4.datasets[0].data = []
            aDados4.datasets[1].data = []
        })
        
        //Processa Dados
        request.then(dados => {  

            for(i=0; i < dados.length; i++) {
                aDados4.labels.push(dados[i].MES)

                aDados4.datasets[1].data.push(dados[i].PRECO)
                aDados4.datasets[0].data.push(dados[i].VALORES)
            }

            cDados4.update(); 
        })  


//rel nov 12
        BuscaDados('/Gerencial3', [
            12
            ,_cEmpresas.name
        ])
        
        //Carrega API
        request.done(dados => {
            aDados10.labels = []

            aDados10.datasets[0].data = []
            aDados10.datasets[1].data = []
        })
        
        //Processa Dados
        request.then(dados => {  

            for(i=0; i < dados.length; i++) {
                aDados10.labels.push(dados[i].MES)

                aDados10.datasets[1].data.push(dados[i].CONSUMO)
                aDados10.datasets[0].data.push(dados[i].COMPRA)
            }

            cDados10.update(); 
        })  

    }

    function CarregaFinanceiro(){
        // 07
        BuscaDados('/Gerencial3', [
            7
            ,cAno4+cMes
            ,_cEmpresas.name
        ])
        
        //Carrega API
        request.done(dados => {})
        
        //Processa Dados
        request.then(dados => {  
            aDados6.setCell(0, 0, "Recebido")   
            aDados6.setCell(0, 1, dados[0].RECEBIDO)   
            aDados6.setCell(0, 2, "GREEN")                 
            aDados6.setCell(0, 3, dados[0].RECEBIDO2)
            
            aDados6.setCell(1, 0, "Pago")   
            aDados6.setCell(1, 1, dados[0].PAGAMENTOS)            
            aDados6.setCell(1, 2, "RED")                 
            aDados6.setCell(1, 3, dados[0].PAGAMENTOS2)
            
            aDados6.setCell(2, 0, "Diferença")   
            aDados6.setCell(2, 1, dados[0].DIF)     
            if(dados[0].DIF > 0){
                aDados6.setCell(2, 2, "GREEN")         
            } else {
                aDados6.setCell(2, 2, "RED")         
            }
            aDados6.setCell(2, 3, dados[0].DIF2)
            
            cDados6.draw(aDados6, options6); 
        })
    }

    setTimeout(function() {
        
        CarregaTabela()
        CarregaDados()
        CarregaFat()
  
        setInterval(function() {
            CarregaFinanceiro
        }, 6000000)
        
    }, 2000)


</script>


<script>
    // Carrega showAllTooltips

    showAllTooltips()
      
    var dTabela4  = document.getElementById('dTabela4').getContext('2d');
    var dTabela5  = document.getElementById('dTabela5').getContext('2d');
    var dTabela7  = document.getElementById('dTabela7').getContext('2d');
    var dTabela9  = document.getElementById('dTabela9').getContext('2d');
    var dTabela10 = document.getElementById('dTabela10').getContext('2d');

    var aDados4 = {
        labels: [ ],
        datasets: [{
            label: 'Faturamento'
            ,borderColor: 'green'
            ,backgroundColor: 'rgba(54, 190, 30, 0.8)'
            //,backgroundColor: [aCores[0], aCores[1], aCores[2], aCores[3], aCores[4] ]
            ,fill: false
            ,data: []
            ,yAxisID: 'y-axis-1'
            ,order: 2 
        }, {
            label: 'Preço KG'
            ,borderColor: 'rgba(233, 28, 28, 0.65)'
            ,backgroundColor: 'red'
            ,fill: false
            ,data: []
            ,type: 'line'
            ,yAxisID: 'y-axis-2'
            ,order: 1
        }]
    };
    
    cDados4 = new Chart(dTabela4, {
        type: 'bar'
        ,data: aDados4
        ,options: {
            responsive: true
            
            ,tooltips: {
                mode: 'index'
                ,intersect: false
                ,callbacks: {
                    title: function(tooltipItem, data) {
                        return ''
                    }
                    ,label: function(tooltipItem, data) {
                        return data['datasets'][tooltipItem.datasetIndex]['data'][tooltipItem['index']];
                    }
                    /*,afterLabel: function(tooltipItem, data) {
                        return data['datasets'][1]['data'][tooltipItem['index']];
                    }*/
                }
                ,backgroundColor: '#000000'
                ,titleFontSize: 10
                ,titleFontColor: '#0066ff'
                ,bodyFontColor: '#ffffff'
                ,bodyFontSize: 10
                ,displayColors: false
                ,xPadding: 1
                ,yPadding: 2
                ,xAlign: 'center'
                ,yAlign: 'center'
            }
            ,hover: {
                mode: 'nearest',
                intersect: true
            }    

            ,showAllTooltips: true

            ,stacked: false
            ,title: {
                display: true,
                text: ''
            }
            ,scales: {
                yAxes: [{
                    type: 'linear' // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                    ,display: true
                    ,position: 'left'
                    ,id: 'y-axis-1'
                    ,ticks: {
                        suggestedMax: 50
                        ,suggestedMin: 0
                    }
                },{
                    type: 'linear' // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                    ,display: true
                    ,position: 'right'
                    ,id: 'y-axis-2'
                    ,ticks: {
                        suggestedMin: -10
                    }

                    // grid line settings
                    ,gridLines: {
                        drawOnChartArea: false, // only want the grid lines for one axis to show up
                    }
                }]
            }
        }
    });

    cDados4.update();

    var aDados5 = {
        labels: [ ],
        datasets: [{
            label: 'Quantidade KG'
            ,borderColor: 'green'
            ,backgroundColor: 'rgba(54, 190, 30, 0.8)'
            //,backgroundColor: [aCores[0], aCores[1], aCores[2], aCores[3], aCores[4] ]
            ,fill: false
            ,data: []
            ,yAxisID: 'y-axis-1'
            ,order: 2 
        }, {
            label: 'Preço KG'
            ,borderColor: 'rgba(233, 28, 28, 0.65)'
            ,backgroundColor: 'red'
            ,fill: false
            ,data: []
            ,type: 'line'
            ,yAxisID: 'y-axis-2'
            ,order: 1
        }]
    };
    
    cDados5 = new Chart(dTabela5, {
        type: 'bar'
        ,data: aDados5
        ,options: {
            responsive: true
            
            ,tooltips: {
                mode: 'index'
                ,intersect: false
                ,callbacks: {
                    title: function(tooltipItem, data) {
                        return ''
                    }
                    ,label: function(tooltipItem, data) {
                        return data['datasets'][tooltipItem.datasetIndex]['data'][tooltipItem['index']];
                    }
                    /*,afterLabel: function(tooltipItem, data) {
                        return data['datasets'][1]['data'][tooltipItem['index']];
                    }*/
                }
                ,backgroundColor: '#000000'
                ,titleFontSize: 10
                ,titleFontColor: '#0066ff'
                ,bodyFontColor: '#ffffff'
                ,bodyFontSize: 10
                ,displayColors: false
                ,xPadding: 1
                ,yPadding: 2
                ,xAlign: 'center'
                ,yAlign: 'center'
            }
            ,hover: {
                mode: 'nearest',
                intersect: true
            }    

            ,showAllTooltips: true

            ,stacked: false
            ,title: {
                display: true,
                text: ''
            }
            ,scales: {
                yAxes: [{
                    type: 'linear' // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                    ,display: true
                    ,position: 'left'
                    ,id: 'y-axis-1'
                    ,ticks: {
                        suggestedMax: 1500
                        ,suggestedMin: 600
                    }
                },{
                    type: 'linear' // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                    ,display: true
                    ,position: 'right'
                    ,id: 'y-axis-2'
                    ,ticks: {
                        suggestedMin: -10
                    }

                    // grid line settings
                    ,gridLines: {
                        drawOnChartArea: false, // only want the grid lines for one axis to show up
                    }
                }]
            }
        }
    });

    cDados5.update();

// Novo 7
    var aDados7 = {
        labels: [ ],
        datasets: [{
            label: 'Quantidade KG'
            ,borderColor: 'green'
            ,backgroundColor: 'rgba(54, 190, 30, 0.8)'
            //,backgroundColor: [aCores[0], aCores[1], aCores[2], aCores[3], aCores[4] ]
            ,fill: false
            ,data: []
            ,yAxisID: 'y-axis-1'
            ,order: 2 
        }, {
            label: 'Preço KG'
            ,borderColor: 'rgba(233, 28, 28, 0.65)'
            ,backgroundColor: 'red'
            ,fill: false
            ,data: []
            ,type: 'line'
            ,yAxisID: 'y-axis-2'
            ,order: 1
        }]
    };
    
    cDados7 = new Chart(dTabela7, {
        type: 'bar'
        ,data: aDados7
        ,options: {
            responsive: true
            
            ,tooltips: {
                mode: 'index'
                ,intersect: false
                ,callbacks: {
                    title: function(tooltipItem, data) {
                        return ''
                    }
                    ,label: function(tooltipItem, data) {
                        return data['datasets'][tooltipItem.datasetIndex]['data'][tooltipItem['index']];
                    }
                    /*,afterLabel: function(tooltipItem, data) {
                        return data['datasets'][1]['data'][tooltipItem['index']];
                    }*/
                }
                ,backgroundColor: '#000000'
                ,titleFontSize: 10
                ,titleFontColor: '#0066ff'
                ,bodyFontColor: '#ffffff'
                ,bodyFontSize: 10
                ,displayColors: false
                ,xPadding: 1
                ,yPadding: 2
                ,xAlign: 'center'
                ,yAlign: 'center'
            }
            ,hover: {
                mode: 'nearest',
                intersect: true
            }    

            ,showAllTooltips: true

            ,stacked: false
            ,title: {
                display: true,
                text: ''
            }
            ,scales: {
                yAxes: [{
                    type: 'linear' // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                    ,display: true
                    ,position: 'left'
                    ,id: 'y-axis-1'
                    ,ticks: {
                        suggestedMax: 600
                        ,suggestedMin: 90
                    }
                },{
                    type: 'linear' // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                    ,display: true
                    ,position: 'right'
                    ,id: 'y-axis-2'
                    ,ticks: {
                        suggestedMax: 20
                        ,suggestedMin: -10
                    }

                    // grid line settings
                    ,gridLines: {
                        drawOnChartArea: false, // only want the grid lines for one axis to show up
                    }
                }]
            }
        }
    });

    cDados7.update();

// Novo 9
    var aDados9 = {
        labels: [ ],
        datasets: [{
            label: 'Quantidade KG'
            ,borderColor: 'green'
            ,backgroundColor: 'rgba(54, 190, 30, 0.8)'
            //,backgroundColor: [aCores[0], aCores[1], aCores[2], aCores[3], aCores[4] ]
            ,fill: false
            ,data: []
            ,yAxisID: 'y-axis-1'
            ,order: 2 
        }, {
            label: 'Preço KG'
            ,borderColor: 'rgba(233, 28, 28, 0.65)'
            ,backgroundColor: 'red'
            ,fill: false
            ,data: []
            ,type: 'line'
            ,yAxisID: 'y-axis-2'
            ,order: 1
        }]
    };
    
    cDados9 = new Chart(dTabela9, {
        type: 'bar'
        ,data: aDados9
        ,options: {
            responsive: true
            
            ,tooltips: {
                mode: 'index'
                ,intersect: false
                ,callbacks: {
                    title: function(tooltipItem, data) {
                        return ''
                    }
                    ,label: function(tooltipItem, data) {
                        return data['datasets'][tooltipItem.datasetIndex]['data'][tooltipItem['index']];
                    }
                    /*,afterLabel: function(tooltipItem, data) {
                        return data['datasets'][1]['data'][tooltipItem['index']];
                    }*/
                }
                ,backgroundColor: '#000000'
                ,titleFontSize: 10
                ,titleFontColor: '#0066ff'
                ,bodyFontColor: '#ffffff'
                ,bodyFontSize: 10
                ,displayColors: false
                ,xPadding: 1
                ,yPadding: 2
                ,xAlign: 'center'
                ,yAlign: 'center'
            }
            ,hover: {
                mode: 'nearest',
                intersect: true
            }    

            ,showAllTooltips: true

            ,stacked: false
            ,title: {
                display: true,
                text: ''
            }
            ,scales: {
                yAxes: [{
                    type: 'linear' // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                    ,display: true
                    ,position: 'left'
                    ,id: 'y-axis-1'
                    ,ticks: {
                        suggestedMax: 2500
                        ,suggestedMin: 600
                    }
                },{
                    type: 'linear' // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                    ,display: true
                    ,position: 'right'
                    ,id: 'y-axis-2'
                    ,ticks: {
                        suggestedMin: -10
                    }

                    // grid line settings
                    ,gridLines: {
                        drawOnChartArea: false, // only want the grid lines for one axis to show up
                    }
                }]
            }
        }
    });

    cDados9.update();


// Novo 10
    var aDados10 = {
        labels: [ ],
        datasets: [{
            label: 'Compra'
            ,backgroundColor: 'rgba(54, 190, 30, 0.8)'
            ,borderColor: 'green'
            ,borderWidth: 1
            ,data: []
        }, {
            label: 'Consumo'
            ,borderColor: '#D60000'
            ,backgroundColor: Color(window.chartColors.red).alpha(0.5).rgbString()
            ,borderWidth: 1
            ,data: []
        }]
    };
    
    cDados10 = new Chart(dTabela10, {
        type: 'bar'
        ,data: aDados10
        ,options: {
            responsive: true
            ,legend: {
                position: 'top',
            }
            ,title: {
                display: true,
                text: ''
            }          
            ,tooltips: {
                mode: 'index'
                ,intersect: false
                ,callbacks: {
                    title: function(tooltipItem, data) {
                        return ''
                    }
                    ,label: function(tooltipItem, data) {
                        return data['datasets'][tooltipItem.datasetIndex]['data'][tooltipItem['index']];
                    }
                    /*,afterLabel: function(tooltipItem, data) {
                        return data['datasets'][1]['data'][tooltipItem['index']];
                    }*/
                }
                ,backgroundColor: '#000000'
                ,titleFontSize: 10
                ,titleFontColor: '#0066ff'
                ,bodyFontColor: '#ffffff'
                ,bodyFontSize: 12
                ,displayColors: false
                ,xPadding: 2
                ,yPadding: 2
                ,xAlign: 'center'
                ,yAlign: 'center'
            }
            ,hover: {
                mode: 'nearest',
                intersect: true
            }    

            ,showAllTooltips: true
            ,scales: {
                yAxes: [{
                    type: 'linear' // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
                    ,display: true
                    ,position: 'left'
                    ,id: 'y-axis-1'
                    ,ticks: {
                        suggestedMax: 1500
                        ,suggestedMin: 0
                    }
                }]
            }
        }
        
    });

    cDados10.update();

</script>


